"""

Реализовать программу работы с органическими клетками, состоящими из ячеек.
Необходимо создать класс Клетка.
В его конструкторе инициализировать параметр, соответствующий количеству ячеек клетки (целое число).
В классе должны быть реализованы методы перегрузки арифметических операторов:
сложение (__add__()), вычитание (__sub__()), умножение (__mul__()), деление (__truediv__()).
Данные методы должны применяться только к клеткам и выполнять увеличение, уменьшение,
умножение и обычное (не целочисленное) деление клеток, соответственно.
В методе деления должно осуществляться округление значения до целого числа

В классе необходимо реализовать метод make_order(), принимающий экземпляр класса и количество ячеек в ряду.
Данный метод позволяет организовать ячейки по рядам.
Метод должен возвращать строку вида *****\n*****\n*****..., где количество ячеек между \n равно переданному аргументу.
Если ячеек на формирование ряда не хватает, то в последний ряд записываются все оставшиеся.

"""


class Cell:
    def __init__(self, mesh):
        """
        :param mesh: int
        """
        self.mesh = mesh

    def __add__(self, other):
        return f"Результат сложения: {self.mesh + other.mesh}"

    # Добавляем условие отрицательного результата
    def __sub__(self, other):
        if self.mesh > other.mesh:
            return f"Результат вычитания: {self.mesh - other.mesh}"
        else:
            return "Ошибка! Результат получится отрицательным."

    def __mul__(self, other):
        return f"Результат умножения: {self.mesh * other.mesh}"

    # Деление округляется до ближайшего целого числа
    def __truediv__(self, other):
        return f"Результат деления: {round(self.mesh / other.mesh)}"

    # Возвращаем строку вида *****\n*****\n*****...
    def make_order(self, row):
        """
        :param row: int
        """
        k = self.mesh // row
        result = []
        [result.append('*') for i in range(self.mesh)]
        while k != 0:
            result.insert(row*k, '\n')
            k -= 1
        [print(el, end='') for el in result]


cell_1 = Cell(17)
cell_2 = Cell(13)

print(cell_1 + cell_2, cell_1 - cell_2, cell_1 * cell_2, cell_1 / cell_2, '', sep='\n')
(cell_1.make_order(5))
